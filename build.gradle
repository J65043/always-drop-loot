buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: vForgeGradle
    }
}

plugins {
    id "com.palantir.git-version" version "0.11.0"
    id "com.diffplug.gradle.spotless" version "3.16.0"
}

apply plugin: "net.minecraftforge.gradle.forge"

version = "$vMinecraft-${gitVersion()}"
group = "$modNamespace"
archivesBaseName = "$modId"

configurations {
    mods
}

repositories {
    jcenter()
    maven { url = "http://dl.tsr.me/artifactory/libs-release/" }
}

dependencies {
    mods "com.fireball1725.devworld:devworld:$vDevWorld"
}

sourceMainJava.source = sourceSets.main.allSource
sourceCompatibility = targetCompatibility = "1.8"
compileJava { sourceCompatibility = targetCompatibility = "1.8" }

minecraft {
    version = "$vMinecraft-$vForge"
    runDir = "run"
    mappings = "$vMcpMappings"
    useDepAts = true
    replace "@MOD_ID@", modId
    replaceIn "AlwaysDropLootMod.java"
}

runClient {
    args = ["--username", runClientPlayerName]
    outputs.upToDateWhen { false }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand(
                "modid": modId,
                "version": project.version,
                "mcversion": project.minecraft.version
        )
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes "FMLAT": "${modId}_at.cfg"
    }
}

spotless {
    format 'misc', {
        target(
                "**/*.md",
                "**/*.gitignore",
                "**/*.json",
                "**/*.info",
                "**/*.lang",
                "**/*.properties"
        )

        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
    java {
        googleJavaFormat()
        licenseHeader '/* Licensed under Apache-2.0 */'
        removeUnusedImports()
    }
}

//noinspection GroovyAssignabilityCheck
task installMods(type: Copy, dependsOn: "deinstallMods") {
    from { configurations.mods }
    include "**/*.jar"
    into file(minecraft.runDir + "/mods")
}

//noinspection GroovyAssignabilityCheck
task deinstallMods(type: Delete) {
    delete fileTree(dir: minecraft.runDir + "/mods", include: "*.jar")
}

tasks.setupDecompWorkspace.dependsOn installMods
tasks.setupDevWorkspace.dependsOn installMods
